akka {
	loggers = ["akka.event.slf4j.Slf4jLogger"]
	loglevel = "DEBUG"
	logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
	actor {
		debug {
            autoreceive=off
            event-stream=off
            fsm=off
            lifecycle=off
            receive=off
            router-misconfiguration=off
            unhandled=off
        }
        provider = "akka.actor.LocalActorRefProvider"
		deployment {
			/controllerRouter {
	    		router = round-robin-pool
				resizer {
					lower-bound = 1
					upper-bound = 1
				}
				stopRouterWhenAllRouteesRemoved = true
			}
			"/controllerRouter/*/*/downloaderRouter" {
	    		router = round-robin-pool
				resizer {
					lower-bound = 1
					upper-bound = 100
				}
				stopRouterWhenAllRouteesRemoved = true
			}
		} 
	}
}
downloader {
	download {
		forceDownload = true
		resumeDownload = true
		directory = "c:/dev/git/repros/AkkaDownloader/download"
	}
	servers {
		download.thinkbroadband.com = 2
	}
	dependencies {
		splitter = "com.nidkil.downloader.splitter.DefaultSplitter"
		splitterStrategy = "ratioStrategy"
		merger = "com.nidkil.downloader.merger.DefaultMerger"
		validator {
			checksum = "com.nidkil.downloader.validator.ChecksumValidator"
			size = "com.nidkil.downloader.validator.FileSizeValidator"
		}
		cleaner = "com.nidkil.downloader.cleaner.DefaultCleaner"
	}
}